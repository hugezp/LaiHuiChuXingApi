<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhcx.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.lhcx.model.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="OrderId" property="orderid" jdbcType="VARCHAR" />
    <result column="PassengerPhone" property="passengerphone" jdbcType="VARCHAR" />
    <result column="DepartTime" property="departtime" jdbcType="TIMESTAMP" />
    <result column="OrderTime" property="ordertime" jdbcType="TIMESTAMP" />
    <result column="PassengerNote" property="passengernote" jdbcType="VARCHAR" />
    <result column="Departure" property="departure" jdbcType="VARCHAR" />
    <result column="DepLongitude" property="deplongitude" jdbcType="VARCHAR" />
    <result column="DepLatitude" property="deplatitude" jdbcType="VARCHAR" />
    <result column="Destination" property="destination" jdbcType="VARCHAR" />
    <result column="DestLongitude" property="destlongitude" jdbcType="VARCHAR" />
    <result column="DestLatitude" property="destlatitude" jdbcType="VARCHAR" />
    <result column="Encrypt" property="encrypt" jdbcType="INTEGER" />
    <result column="FareType" property="faretype" jdbcType="VARCHAR" />
    <result column="Fee" property="fee" jdbcType="DECIMAL" />
    <result column="OrderType" property="orderType" jdbcType="INTEGER" />
    <result column="CarType" property="carType" jdbcType="INTEGER" />
    <result column="DriverPhone" property="driverphone" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="PassengerIdentityToken" property="passengerIdentityToken" jdbcType="VARCHAR" />
    <result column="DriverIdentityToken" property="driverIdentityToken" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,  OrderId, PassengerPhone, DepartTime, OrderTime, PassengerNote, 
    Departure, DepLongitude, DepLatitude, Destination, DestLongitude, DestLatitude, Encrypt, 
    FareType, Fee, OrderType,CarType,DriverPhone,Status,PassengerIdentityToken,DriverIdentityToken
  </sql>
  <select id="selectByOrderId" resultType="com.lhcx.model.Order">
    select 
    <include refid="Base_Column_List" />,
 		ROUND(
	        6378.138 * 2 * ASIN(
	            SQRT(
	                POW(
	                    SIN(
	                        (
	                            CAST(DepLatitude AS signed) / 1000000 * PI() / 180 - CAST(DestLatitude AS signed) / 1000000 * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                ) + COS(CAST(DepLatitude AS signed) / 1000000 * PI() / 180) * COS(CAST(DestLatitude AS signed) / 1000000 * PI() / 180) * POW(
	                    SIN(
	                        (
	                            CAST(DepLongitude AS signed) / 1000000 * PI() / 180 - CAST(DestLongitude AS signed) / 1000000 * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                )
	            )
        ) * 1000
    ) AS totalDistance from orders
    where OrderId = #{orderId}
  </select>
  
  <select id="selectNewOrderByPassengerIdentityToken" resultType="com.lhcx.model.Order">
  	select OrderId,status from orders 
  	where PassengerIdentityToken = #{passengerIdentityToken} and (Status > 0 and Status &lt; 5)
  	order by OrderTime desc limit 1
  </select>
   
  <select id="selectTotalCountByDriverIdentityToken" resultType="int">
  	select count(*) as totalCount
  	from orders 
  	where DriverIdentityToken = #{driverIdentityToken} 
  	<if test="status != null" >
       and Status = #{status}
     </if>
  </select>
  
   <select id="selectOrderByPassengerIdentityToken" resultType="com.lhcx.model.Order">
  	select 
  	<include refid="Base_Column_List" />
  	 from orders 
  	 where PassengerIdentityToken = #{passengerIdentityToken} 
  	 order by OrderTime desc
  	 limit #{startPro},#{pageSize}
  </select>
  
  <select id="selectOrderByDriverIdentityToken" resultType="com.lhcx.model.Order">
  	select 
  	<include refid="Base_Column_List" />
  	 from orders 
  	 where DriverIdentityToken = #{driverIdentityToken} 
  	 order by OrderTime desc
  	 limit #{startPro},#{pageSize}
  </select>
  
   <select id="selectNewOrderByDriverIdentityToken" resultType="com.lhcx.model.Order">
  	select OrderId,status from orders 
  	where DriverIdentityToken = #{driverIdentityToken}  and (Status > 1 and Status &lt; 5)
  	order by OrderTime desc limit 1
  </select>
  
  <insert id="insertSelective" parameterType="com.lhcx.model.Order" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>   
      <if test="orderid != null" >
        OrderId,
      </if>
      <if test="passengerphone != null" >
        PassengerPhone,
      </if>
      <if test="departtime != null" >
        DepartTime,
      </if>
      <if test="ordertime != null" >
        OrderTime,
      </if>
      <if test="passengernote != null" >
        PassengerNote,
      </if>
      <if test="departure != null" >
        Departure,
      </if>
      <if test="deplongitude != null" >
        DepLongitude,
      </if>
      <if test="deplatitude != null" >
        DepLatitude,
      </if>
      <if test="destination != null" >
        Destination,
      </if>
      <if test="destlongitude != null" >
        DestLongitude,
      </if>
      <if test="destlatitude != null" >
        DestLatitude,
      </if>
      <if test="encrypt != null" >
        Encrypt,
      </if>
      <if test="faretype != null" >
        FareType,
      </if>
      <if test="fee != null" >
        Fee,
      </if>       
      <if test="orderType != null" >
        OrderType,
      </if>
      <if test="carType != null" >
        CarType,
      </if>
      <if test="driverphone != null" >
        DriverPhone,
      </if>
      <if test="passengerIdentityToken != null" >
        PassengerIdentityToken,
      </if>
      <if test="driverIdentityToken != null" >
        DriverIdentityToken,
      </if>
      <if test="status != null" >
        Status
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>   
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="passengerphone != null" >
        #{passengerphone,jdbcType=VARCHAR},
      </if>
      <if test="departtime != null" >
        #{departtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="passengernote != null" >
        #{passengernote,jdbcType=VARCHAR},
      </if>
      <if test="departure != null" >
        #{departure,jdbcType=VARCHAR},
      </if>
      <if test="deplongitude != null" >
        #{deplongitude,jdbcType=VARCHAR},
      </if>
      <if test="deplatitude != null" >
        #{deplatitude,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="destlongitude != null" >
        #{destlongitude,jdbcType=VARCHAR},
      </if>
      <if test="destlatitude != null" >
        #{destlatitude,jdbcType=VARCHAR},
      </if>
      <if test="encrypt != null" >
        #{encrypt,jdbcType=INTEGER},
      </if>
      <if test="faretype != null" >
        #{faretype,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=DECIMAL},
      </if>      
       <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="carType != null" >
        #{carType,jdbcType=INTEGER},
      </if>
      <if test="driverphone != null" >
        #{driverphone,jdbcType=VARCHAR},
      </if>
      <if test="passengerIdentityToken != null" >
        #{passengerIdentityToken,jdbcType=VARCHAR},
      </if>
      <if test="driverIdentityToken != null" >
        #{driverIdentityToken,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByOrderIdSelective" parameterType="com.lhcx.model.Order" >
    update orders
    <set >     
      <if test="passengerphone != null" >
        PassengerPhone = #{passengerphone,jdbcType=VARCHAR},
      </if>
      <if test="departtime != null" >
        DepartTime = #{departtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordertime != null" >
        OrderTime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="passengernote != null" >
        PassengerNote = #{passengernote,jdbcType=VARCHAR},
      </if>
      <if test="departure != null" >
        Departure = #{departure,jdbcType=VARCHAR},
      </if>
      <if test="deplongitude != null" >
        DepLongitude = #{deplongitude,jdbcType=VARCHAR},
      </if>
      <if test="deplatitude != null" >
        DepLatitude = #{deplatitude,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        Destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="destlongitude != null" >
        DestLongitude = #{destlongitude,jdbcType=VARCHAR},
      </if>
      <if test="destlatitude != null" >
        DestLatitude = #{destlatitude,jdbcType=VARCHAR},
      </if>
      <if test="encrypt != null" >
        Encrypt = #{encrypt,jdbcType=INTEGER},
      </if>
      <if test="faretype != null" >
        FareType = #{faretype,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        Fee = #{fee,jdbcType=DECIMAL},
      </if>     
       <if test="orderType != null" >
        OrderType = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="carType != null" >
        CarType = #{carType,jdbcType=INTEGER},
      </if>
      <if test="driverphone != null" >
        DriverPhone = #{driverphone,jdbcType=VARCHAR},
      </if>
      <if test="passengerIdentityToken != null" >
        #{passengerIdentityToken,jdbcType=VARCHAR},
      </if>
      <if test="driverIdentityToken != null" >
        #{driverIdentityToken,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=INTEGER}
      </if>
    </set>
    where OrderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>