<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhcx.dao.PayCashLogMapper" >
  <resultMap id="BaseResultMap" type="com.lhcx.model.PayCashLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="OrderId" property="orderid" jdbcType="VARCHAR" />
    <result column="Cash" property="cash" jdbcType="DECIMAL" />
    <result column="ActionType" property="actiontype" jdbcType="INTEGER" />
    <result column="PayAccount" property="payaccount" jdbcType="VARCHAR" />
    <result column="PayType" property="paytype" jdbcType="INTEGER" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="Description" property="description" jdbcType="VARCHAR" />
    <result column="ErrorDesc" property="errordesc" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="UpdateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="IdentityToken" property="identityToken" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, OrderId, Cash, ActionType, PayAccount, PayType, 
    Status, Description, ErrorDesc, CreateTime, UpdateTime,IdentityToken
  </sql>
  <select id="selectByIdentityToken" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from pay_cash_logs
    where IdentityToken = #{identityToken} and Status = 2
   	order by UpdateTime desc
 	 limit #{startPro},#{pageSize}
  </select>
   <select id="selectByIdentityTokenAndActiontype" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from pay_cash_logs
    where IdentityToken = #{identityToken} and ActionType = #{actiontype}
   	order by UpdateTime desc
 	 limit #{page},#{size}
  </select>
  <select id="selectByIdentityTokenAndTime" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from pay_cash_logs
    where IdentityToken = #{identityToken} and Status = 2 and CreateTime &gt; #{startTime} and CreateTime &lt;= #{endTime}
    order by UpdateTime desc
 	 limit #{page},#{size}
  </select>
  <select id="selectCashByIdentityTokenToday" resultType="java.math.BigDecimal">
    select
    case when sum(Cash) is null then 0.00 else sum(Cash) end as totalCash
    from pay_cash_logs
    where IdentityToken = #{identityToken,jdbcType=VARCHAR} and Status = 2 and UpdateTime > CURDATE()
  </select>
  <insert id="insertSelective" parameterType="com.lhcx.model.PayCashLog" >
    insert into pay_cash_logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        OrderId,
      </if>
      <if test="identityToken != null" >
        IdentityToken,
      </if>
      <if test="cash != null" >
        Cash,
      </if>
      <if test="actiontype != null" >
        ActionType,
      </if>
      <if test="payaccount != null" >
        PayAccount,
      </if>
      <if test="paytype != null" >
        PayType,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="description != null" >
        Description,
      </if>
      <if test="errordesc != null" >
        ErrorDesc,
      </if>
      <if test="createtime != null" >
        CreateTime,
      </if>
      <if test="updatetime != null" >
        UpdateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="identityToken != null" >
        #{identityToken,jdbcType=VARCHAR},
      </if>
      <if test="cash != null" >
        #{cash,jdbcType=DECIMAL},
      </if>
      <if test="actiontype != null" >
        #{actiontype,jdbcType=INTEGER},
      </if>
      <if test="payaccount != null" >
        #{payaccount,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null" >
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="errordesc != null" >
        #{errordesc,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
</mapper>